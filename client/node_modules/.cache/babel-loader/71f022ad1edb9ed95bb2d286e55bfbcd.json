{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Sushil/Documents/chat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"C:/Users/Sushil/Documents/chat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"C:/Users/Sushil/Documents/chat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/Sushil/Documents/chat/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import ScrollToBottom from\"react-scroll-to-bottom\";import'./Chat.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Chat(_ref){var socket=_ref.socket,username=_ref.username,room=_ref.room;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),currentMessage=_useState2[0],setCurrentMessage=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),messageList=_useState4[0],setMessageList=_useState4[1];var sendMessage=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var messageData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(currentMessage!==\"\")){_context.next=6;break;}messageData={room:room,author:username,message:currentMessage,time:new Date(Date.now()).getHours()+\":\"+new Date(Date.now()).getMinutes()};_context.next=4;return socket.emit(\"send_message\",messageData);case 4:setMessageList(function(list){return[].concat(_toConsumableArray(list),[messageData]);});setCurrentMessage(\"\");case 6:case\"end\":return _context.stop();}}},_callee);}));return function sendMessage(){return _ref2.apply(this,arguments);};}();useEffect(function(){socket.on(\"receive_message\",function(data){setMessageList(function(list){return[].concat(_toConsumableArray(list),[data]);});});},[socket]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"chat-window\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-header\",children:/*#__PURE__*/_jsx(\"p\",{children:\" Chat Now\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-body\",children:/*#__PURE__*/_jsx(ScrollToBottom,{className:\"message-container\",children:messageList.map(function(messageContent){return/*#__PURE__*/_jsx(\"div\",{className:\"message\",id:username===messageContent.author?\"you\":\"other\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:/*#__PURE__*/_jsx(\"p\",{children:messageContent.message})}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-meta\",children:[/*#__PURE__*/_jsx(\"p\",{id:\"time\",children:messageContent.time}),/*#__PURE__*/_jsx(\"p\",{id:\"author\",children:messageContent.author})]})]})});})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-footer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:currentMessage,placeholder:\"Hey...\",onChange:function onChange(event){setCurrentMessage(event.target.value);},onKeyPress:function onKeyPress(event){event.key===\"Enter\"&&sendMessage();}}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,children:\"\\u25BA\"})]})]})});}export default Chat;","map":{"version":3,"sources":["C:/Users/Sushil/Documents/chat/client/src/Chat.js"],"names":["React","useEffect","useState","ScrollToBottom","Chat","socket","username","room","currentMessage","setCurrentMessage","messageList","setMessageList","sendMessage","messageData","author","message","time","Date","now","getHours","getMinutes","emit","list","on","data","map","messageContent","event","target","value","key"],"mappings":"qnBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,cAAP,KAA2B,wBAA3B,CACA,MAAO,YAAP,C,6IAEA,QAASC,CAAAA,IAAT,MAA0C,IAA1BC,CAAAA,MAA0B,MAA1BA,MAA0B,CAAlBC,QAAkB,MAAlBA,QAAkB,CAARC,IAAQ,MAARA,IAAQ,eACIL,QAAQ,CAAC,EAAD,CADZ,wCACjCM,cADiC,eACjBC,iBADiB,8BAEFP,QAAQ,CAAC,EAAD,CAFN,yCAEjCQ,WAFiC,eAEpBC,cAFoB,eAIxC,GAAMC,CAAAA,WAAW,2FAAG,wJACdJ,cAAc,GAAK,EADL,0BAEVK,WAFU,CAEI,CAClBN,IAAI,CAAEA,IADY,CAElBO,MAAM,CAAER,QAFU,CAGlBS,OAAO,CAAEP,cAHS,CAIlBQ,IAAI,CACF,GAAIC,CAAAA,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBC,QAArB,GACA,GADA,CAEA,GAAIF,CAAAA,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBE,UAArB,EAPgB,CAFJ,uBAYVf,CAAAA,MAAM,CAACgB,IAAP,CAAY,cAAZ,CAA4BR,WAA5B,CAZU,QAahBF,cAAc,CAAC,SAACW,IAAD,qCAAcA,IAAd,GAAoBT,WAApB,IAAD,CAAd,CACAJ,iBAAiB,CAAC,EAAD,CAAjB,CAdgB,sDAAH,kBAAXG,CAAAA,WAAW,2CAAjB,CAkBAX,SAAS,CAAC,UAAM,CACdI,MAAM,CAACkB,EAAP,CAAU,iBAAV,CAA6B,SAACC,IAAD,CAAU,CACrCb,cAAc,CAAC,SAACW,IAAD,qCAAcA,IAAd,GAAoBE,IAApB,IAAD,CAAd,CACD,CAFD,EAGD,CAJQ,CAIN,CAACnB,MAAD,CAJM,CAAT,CAMA,mBACE,sCACA,aAAK,SAAS,CAAC,aAAf,wBACE,YAAK,SAAS,CAAC,aAAf,uBACE,gCADF,EADF,cAIE,YAAK,SAAS,CAAC,WAAf,uBACE,KAAC,cAAD,EAAgB,SAAS,CAAC,mBAA1B,UACGK,WAAW,CAACe,GAAZ,CAAgB,SAACC,cAAD,CAAoB,CACnC,mBACE,YACE,SAAS,CAAC,SADZ,CAEE,EAAE,CAAEpB,QAAQ,GAAKoB,cAAc,CAACZ,MAA5B,CAAqC,KAArC,CAA6C,OAFnD,uBAIE,oCACE,YAAK,SAAS,CAAC,iBAAf,uBACE,mBAAIY,cAAc,CAACX,OAAnB,EADF,EADF,cAIE,aAAK,SAAS,CAAC,cAAf,wBACE,UAAG,EAAE,CAAC,MAAN,UAAcW,cAAc,CAACV,IAA7B,EADF,cAEE,UAAG,EAAE,CAAC,QAAN,UAAgBU,cAAc,CAACZ,MAA/B,EAFF,GAJF,GAJF,EADF,CAgBD,CAjBA,CADH,EADF,EAJF,cA0BE,aAAK,SAAS,CAAC,aAAf,wBACE,cACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAEN,cAFT,CAGE,WAAW,CAAC,QAHd,CAIE,QAAQ,CAAE,kBAACmB,KAAD,CAAW,CACnBlB,iBAAiB,CAACkB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB,CACD,CANH,CAOE,UAAU,CAAE,oBAACF,KAAD,CAAW,CACrBA,KAAK,CAACG,GAAN,GAAc,OAAd,EAAyBlB,WAAW,EAApC,CACD,CATH,EADF,cAYE,eAAQ,OAAO,CAAEA,WAAjB,oBAZF,GA1BF,GADA,EADF,CA8CD,CAED,cAAeR,CAAAA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport './Chat.css'\n\nfunction Chat({ socket, username, room }) {\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        room: room,\n        author: username,\n        message: currentMessage,\n        time:\n          new Date(Date.now()).getHours() +\n          \":\" +\n          new Date(Date.now()).getMinutes(),\n      };\n\n      await socket.emit(\"send_message\", messageData);\n      setMessageList((list) => [...list, messageData]);\n      setCurrentMessage(\"\");\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"receive_message\", (data) => {\n      setMessageList((list) => [...list, data]);\n    });\n  }, [socket]);\n\n  return (\n    <>\n    <div className=\"chat-window\">\n      <div className=\"chat-header\">\n        <p> Chat Now</p>\n      </div>\n      <div className=\"chat-body\">\n        <ScrollToBottom className=\"message-container\">\n          {messageList.map((messageContent) => {\n            return (\n              <div\n                className=\"message\"\n                id={username === messageContent.author ? \"you\" : \"other\"}\n              >\n                <div>\n                  <div className=\"message-content\">\n                    <p>{messageContent.message}</p>\n                  </div>\n                  <div className=\"message-meta\">\n                    <p id=\"time\">{messageContent.time}</p>\n                    <p id=\"author\">{messageContent.author}</p>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </ScrollToBottom>\n      </div>\n      <div className=\"chat-footer\">\n        <input\n          type=\"text\"\n          value={currentMessage}\n          placeholder=\"Hey...\"\n          onChange={(event) => {\n            setCurrentMessage(event.target.value);\n          }}\n          onKeyPress={(event) => {\n            event.key === \"Enter\" && sendMessage();\n          }}\n        />\n        <button onClick={sendMessage}>&#9658;</button>\n      </div>\n    </div>\n</>\n    \n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}